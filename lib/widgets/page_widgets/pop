import 'dart:developer';

import 'package:convex_bottom_bar/convex_bottom_bar.dart';
import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_iconly/flutter_iconly.dart';
import 'package:maan_doctor_appoinment/const/const.dart';
import 'package:maan_doctor_appoinment/ui/Home/Doctor%20Appoinment/mt_book_appoinment.dart';
import 'package:maan_doctor_appoinment/ui/Home/mt_home.dart';
import 'package:maan_doctor_appoinment/ui/Profile/mt_profile.dart';

import '../History/mt_history.dart';

class HomeBottomNavBarScreen extends StatefulWidget {
  const HomeBottomNavBarScreen({super.key});

  @override
  State<HomeBottomNavBarScreen> createState() => _HomeBottomNavBarScreenState();
}

class _HomeBottomNavBarScreenState extends State<HomeBottomNavBarScreen> {
  var currentIndex = 0;
  var selectedIndex = 0;
  bool showPopup = false;

  List<Widget> pages = [
    const HomeScreen(),
    const BookAppoinment(),
    Container(),
    const Center(
      child: Text("Payment UI needed"),
    ),
    const ProfileScreen()
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: GestureDetector(
        onTap: () {
          if (showPopup) {
            setState(() {
              showPopup = false;
              selectedIndex = currentIndex;
            });
          }
        },
        child: Stack(
          children: [
            pages.elementAt(currentIndex),
            // AnimatedContainer for the popup when the third tab is clicked
            Positioned(
              bottom: 100,
              left: MediaQuery.of(context).size.width * 0.1,
              right: MediaQuery.of(context).size.width * 0.1,
              child: AnimatedContainer(
                duration: const Duration(milliseconds: 300),
                height: showPopup ? 200 : 0, // Animate height
                curve: Curves.easeInOut,
                decoration: showPopup
                    ? BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(20),
                        boxShadow: [
                          BoxShadow(
                            color: Colors.black.withOpacity(0.1),
                            blurRadius: 10,
                            spreadRadius: 5,
                          ),
                        ],
                      )
                    : BoxDecoration(
                        color: Colors.white,
                        borderRadius: BorderRadius.circular(20),
                      ),
                child: ClipRRect(
                  borderRadius: BorderRadius.circular(20),
                  child: SingleChildScrollView(
                    child: showPopup
                        ? Center(
                            child: Stack(
                              children: [
                                const Column(
                                  mainAxisAlignment: MainAxisAlignment.center,
                                  children: [
                                    ListTile(
                                        leading: Icon(Icons.safety_check),
                                        title: Text("Services")),
                                    ListTile(
                                        leading: Icon(Icons.safety_check),
                                        title: Text("Tests")),
                                    ListTile(
                                        leading: Icon(Icons.safety_check),
                                        title: Text("Appointment")),
                                  ],
                                ),
                                Positioned(
                                  right: 5,
                                  top: 5,
                                  child: IconButton(
                                    onPressed: () {
                                      if (showPopup) {
                                        setState(() {
                                          showPopup = false;
                                        });
                                      }
                                    },
                                    icon: const Icon(
                                      Icons.cancel,
                                    ),
                                  ),
                                )
                              ],
                            ),
                          )
                        : null,
                  ),
                ),
              ),
            ),
          ],
        ),
      ),
      bottomNavigationBar: StyleProvider(
        style: Style(),
        child: ConvexAppBar(
          height: 72,
          shadowColor: kSubTitleColor.withOpacity(0.1),
          style: TabStyle.fixedCircle,
          color: kSubTitleColor,
          backgroundColor: kLikeWhiteColor,
          activeColor: kMainColor,
          onTap: (value) {
            setState(() {
              if (value == 2) {
                showPopup = true;
              } else {
                showPopup = false;
                currentIndex = value;
              }
            });
          },
          items: [
            TabItem(
              icon: Icon(
                IconlyBold.home,
                color: kSubTitleColor,
              ),
              title: "Home",
              activeIcon: Icon(
                IconlyBold.home,
                color: kMainColor,
              ),
            ),
            TabItem(
              icon: ImageIcon(
                const AssetImage(
                  "assets/icons/pharmacy.png",
                ),
                color: kSubTitleColor,
              ),
              title: "Appointment",
              activeIcon: ImageIcon(
                const AssetImage(
                  "assets/icons/pharmacy.png",
                ),
                color: kMainColor,
              ),
            ),
            TabItem(
              icon: Icon(
                IconlyBold.plus,
                color: kLikeWhiteColor,
              ),
              title: "",
              activeIcon: Icon(
                IconlyBold.plus,
                color: kLikeWhiteColor,
              ),
            ),
            TabItem(
              icon: Icon(
                IconlyBold.document,
                color: kSubTitleColor,
              ),
              title: "Payment",
              activeIcon: Icon(
                IconlyBold.document,
                color: kMainColor,
              ),
            ),
            TabItem(
              icon: Icon(
                IconlyBold.profile,
                color: kSubTitleColor,
              ),
              title: "Profile",
              activeIcon: Icon(
                IconlyBold.profile,
                color: kMainColor,
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// Define a custom Style class for overriding the text style
class Style extends StyleHook {
  @override
  TextStyle textStyle(Color color, String? fontFamily) {
    return TextStyle(fontSize: 10, color: color);
  }

  @override
  double get activeIconSize => 30;

  @override
  double get iconSize => 24;

  @override
  double get activeIconMargin => 5;

  @override
  double get iconMargin => 5;
}